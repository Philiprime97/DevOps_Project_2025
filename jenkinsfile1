pipeline {
    agent any

    environment {
        HARBOR_URL       = 'http://192.168.1.179:80'
        HARBOR_PROJECT   = 'devops'
        IMAGE_NAME       = 'myapp-b'
        IMAGE_TAG        = '1'
        CREDENTIALS_ID   = 'devops-test'     // üëà your Jenkins credentials ID here
    }

    stages {

        stage('Docker Info Check') {
            steps {
                sh 'docker info'
            }
        }

        stage('Checkout Code') {
            steps {
                checkout scm
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    sh """
                    cd docker &&
                    docker build -t ${HARBOR_URL.replace('http://', '')}/${HARBOR_PROJECT}/${IMAGE_NAME}:${IMAGE_TAG} .
                    """
                }
            }
        }

        stage('Login to Harbor') {
            steps {
                withCredentials([usernamePassword(credentialsId: "${CREDENTIALS_ID}", usernameVariable: 'HARBOR_USER', passwordVariable: 'HARBOR_PASS')]) {
                    sh '''
                    echo $HARBOR_PASS | docker login ${HARBOR_URL} -u $HARBOR_USER --password-stdin
                    '''
                }
            }
        }

        stage('Push Image to Harbor') {
            steps {
                script {
                    sh """
                    docker push ${HARBOR_URL.replace('http://', '')}/${HARBOR_PROJECT}/${IMAGE_NAME}:${IMAGE_TAG}
                    """
                }
            }
        }

        stage('Delay Before Scan') {
            steps {
                echo "‚è≥ Waiting 10 seconds before triggering Harbor scan..."
                sleep(time: 10, unit: 'SECONDS')
            }
        }

        stage('Trigger Harbor Trivy Scan') {
            steps {
                echo "üîç Triggering Trivy scan in Harbor..."
                withCredentials([usernamePassword(credentialsId: "${CREDENTIALS_ID}", usernameVariable: 'HARBOR_USER', passwordVariable: 'HARBOR_PASS')]) {
                    sh '''
                    docker run --rm \
                      -e HARBOR_URL="${HARBOR_URL}" \
                      -e HARBOR_USERNAME="$HARBOR_USER" \
                      -e HARBOR_PASSWORD="$HARBOR_PASS" \
                      goharbor/harbor-cli:latest \
                      artifact scan trigger ${HARBOR_PROJECT}/${IMAGE_NAME}:${IMAGE_TAG}
                    '''
                }
            }
        }

        stage('Fetch Trivy Scan Report') {
            steps {
                echo "üìÑ Fetching scan results..."
                withCredentials([usernamePassword(credentialsId: "${CREDENTIALS_ID}", usernameVariable: 'HARBOR_USER', passwordVariable: 'HARBOR_PASS')]) {
                    sh '''
                    docker run --rm \
                        -e HARBOR_URL="${HARBOR_URL}" \
                        -e HARBOR_USERNAME="$HARBOR_USER" \
                        -e HARBOR_PASSWORD="$HARBOR_PASS" \
                        goharbor/harbor-cli:latest \
                        artifact scan get ${HARBOR_PROJECT}/${IMAGE_NAME}:${IMAGE_TAG} > trivy_report.txt
                    '''
                }
                // Save the report in Jenkins
                archiveArtifacts artifacts: 'trivy_report.txt', fingerprint: true
            }
        }
    }

    post {
        always {
            echo "üßπ Cleaning up local images..."
            sh "docker rmi ${HARBOR_URL.replace('http://', '')}/${HARBOR_PROJECT}/${IMAGE_NAME}:${IMAGE_TAG} || true"
        }
        success {
            echo "‚úÖ Image pushed and scanned successfully in Harbor: ${HARBOR_URL}/${HARBOR_PROJECT}/${IMAGE_NAME}:${IMAGE_TAG}"
        }
        failure {
            echo "‚ùå Build failed. Check logs above."
        }
    }
}
